<?xml version="1.0" encoding="UTF-8"?>
<project name="Dynamic Dao" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <import file="ivyutil.xml"/>
    <property name="lib.dir" value="lib"/>
    <property name="src.tests" value="test"/>
    <property name="src.docs" value="docs"/>
    <property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="build/classes"/>
    <property name="build.jar.dir" value="build/lib"/>
    <property name="build.docs" value="build/docs"/>
    <property name="build.javadoc" value="build/docs/javadoc"/>
    <property name="dist.dir" value="dist"/>
    <property name="dist.lib" value="dist/lib"/>
    <property name="dist.javadoc" value="docs/javadoc"/>
    <property name="testlib.dir" value="testlib"/>
    <property name="reports.tests" value="build"/>
    <path id="src.path">
        <path path="src/java/alinker"/>
        <path path="src/java/main"/>
        <path path="src/java/shards"/>
    </path>
    <path id="runtime-libs">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${ivylib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <path id="test-libs">
        <fileset dir="${testlib.dir}">
            <include name="*.jar"/>
        </fileset>
        <path refid="runtime-libs"/>
    </path>

    <!-- targets overriden from ivyttool.xml -->
    <target name="prep-publish" depends="jars,src-zip" description="--> used by publish targets from util.xml"/>
    <target name="clean" depends="clean-ivylib">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="dist" depends="clean,jars,docs">
        <mkdir dir="${dist.dir}"/>
        <ivy:info file="${ivy.file}"/>
        <zip destfile="${dist.dir}/${ivy.module}-bin.zip">
            <zipfileset dir="${lib.dir}" prefix="${ivy.module}/lib"/>
            <zipfileset dir="${build.jar.dir}" prefix="${ivy.module}/lib"/>
            <zipfileset dir="${build.docs}" prefix="${ivy.module}/docs"/>
            <zipfileset dir="${src.tests}" prefix="${ivy.module}/test"/>
        </zip>
        <zip destfile="${dist.dir}/${ivy.module}-src.zip">
            <zipfileset dir="." prefix="${ivy.module}" excludes="build/**,dist/**"/>
        </zip>
    </target>
    <target name="src-zip" depends="ivy-setup">
        <zip destfile="${build.jar.dir}/${ivy.module}-src.zip">
            <zipfileset dir="src/java/alinker"/>
            <zipfileset dir="src/java/main"/>
            <zipfileset dir="src/java/shards"/>
        </zip>
    </target>
    <target name="jars"
            depends="compile">
        <jar destfile="${build.jar.dir}/${ivy.module}.jar"
             basedir="${build.classes.dir}">
            <manifest>
                <attribute name="Jar-Version" value="${ivy.new.revision}"/>
            </manifest>
        </jar>
    </target>
    <target name="test" depends="compile,compile-test">
        <junit haltonfailure="yes">
            <classpath>
                <path refid="test-libs"/>
                <dirset dir="${build.classes.dir}"/>
            </classpath>
            <formatter type="plain"/>
            <batchtest fork="yes" todir="${reports.tests}">
                <fileset dir="${src.tests}">
                    <include name="**/*Test.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="docs">
        <mkdir dir="${build.docs}"/>
        <loadfile property="html.header" srcFile="${src.docs}/header.templ"/>
        <loadfile property="html.footer" srcFile="${src.docs}/footer.templ"/>
        <copy todir="${build.docs}">
            <fileset dir="${src.docs}" excludes="**/*.templ,**/*.html"/>
        </copy>
        <copy todir="${build.docs}">
            <fileset dir="${src.docs}" includes="**/*.html"/>
            <filterchain>
                <replacetokens>
                    <token key="html.header"
                           value="${html.header}"/>
                    <token key="html.footer"
                           value="${html.footer}"/>
                </replacetokens>
            </filterchain>
        </copy>
        <javadoc sourcepath="src" destdir="${build.javadoc}"/>
    </target>
    <target name="compile" depends="ivy-resolve">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.jar.dir}"/>
        <javac destdir="${build.classes.dir}"
               debug="true"
               source="1.5"
               deprecation="true">
            <src refid="src.path"/>
            <classpath refid="runtime-libs"/>
        </javac>
    </target>
    <target name="compile-test">
        <javac srcdir="${src.tests}"
               destdir="${build.classes.dir}"
               debug="true"
               deprecation="true">
            <classpath refid="test-libs"/>
        </javac>
    </target>
</project>
